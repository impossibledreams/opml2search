<?xml version="1.0"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output method = "html"	encoding="utf-8"
  	doctype-system="http://www.w3.org/TR/html4/loose.dtd" 
  	doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN"
  	indent="yes"/>
  	
	<xsl:param name="opml_url"/>
	<xsl:param name="version"/>  	
	<xsl:param name="client_id"/>

<!--
#
#   opml2html, created by Yakov Shafranovich.
#   Copyright (c) 2005-2009 SolidMatrix Technologies, Inc.
#   Copyright (c) 2009-2015 Shaftek Enterprises.
#   Copyright (c) 2016- Impossible Dreams Network.
#
#   Source code can be found at:
#   https://github.com/impossibledreams/opml2search
#
-->
	<xsl:template match="/">
 		<html>
 			<head>
 				<title>OPML Search Page: <xsl:value-of select="opml/head/title"/></title>
				<xsl:comment>
					Generated by <xsl:value-of select="$version"/> 
				</xsl:comment>
				<script type="text/javascript" language="Javascript">
					<!--
					var search_url = 'http://www.google.com/search?q=';
					var site_oper = 'site:';

					function search(obj) {
						location.href = search_url +
										obj.parentElement.q.value  +
										' ' +
										site_oper +
										obj.parentElement.site.value;
						event.returnValue=false;
					}
					-->
					function buy(obj) {
					    var url = 
						obj.parentNode.q[1].options[obj.parentNode.q[1].selectedIndex].getAttribute('adUrl');
					    if(url) { location.href = url; }
					}
				</script>								
 			</head>
 			<body>
 				<hr/>
				<h1 align="center">OPML Search Page: <xsl:value-of select="opml/head/title"/></h1>
				<h3 align="center">OPML Location: <I><a href="{$opml_url}"><xsl:value-of select="$opml_url"/></a></I></h3>
				<hr/>
 				<table align="center">
 		 		<xsl:apply-templates/>
 		 		</table>
 		 		<hr/>
 		 		<p align="center">Generated by <xsl:value-of select="$version"/>. Source code is available at <a href="https://github.com/impossibledreams/opml2search">GitHub</a>
 		 		Please see <a href="http://www.shaftek.org">http://www.shaftek.org</a> for more information. Search services provided
				by <a href="http://www.google.com">Google</a> which is not affiliated with this site.
 		 		</p>
 		 		<p align="center">
    				<a href="http://validator.w3.org/check?uri=referer">
    					<img
        				src="http://www.w3.org/Icons/valid-html401"
        				alt="Valid HTML 4.01 Transitional" height="31" width="88"/>
        			</a>
  				</p>
  				<hr/>	 	
			</body>
		</html>
	</xsl:template>

	<xsl:template match="body">
		<xsl:choose>
		<xsl:when test="child::outline[attribute::type]">
			<tr><td><xsl:value-of select="../head/title"/> :</td>
			<td>
			<form method="get" action="http://www.google.com/search">
				<input type="text" name="q" size="31" maxlength="255" value=""></input>
				<select name="q"><xsl:apply-templates select="child::outline[attribute::type]"/></select>
				<input type="submit" value="Search"/>
			</form>
			</td>
			</tr>
		</xsl:when>
		<xsl:otherwise><xsl:apply-templates/></xsl:otherwise>				
		</xsl:choose>
	</xsl:template>

	<xsl:template match="outline">
		<xsl:variable name="text"><xsl:choose>
			<xsl:when test="@text"><xsl:value-of select="@text"/></xsl:when>
			<xsl:otherwise><xsl:value-of select="@title"/></xsl:otherwise>
		</xsl:choose></xsl:variable>
		
		<xsl:choose>
			<xsl:when test="@type = 'link'">
			    <option value="site:{@url}"><xsl:value-of select="$text"/>
			    <xsl:if test="@adUrl"><xsl:copy-of select="@adUrl"/></xsl:if>
			    </option>
			</xsl:when>
			<xsl:when test="@type = 'rss' and string-length(@url) &gt; 0">
			    <option value="site:{@url}"><xsl:value-of select="$text"/>
			    <xsl:if test="@adUrl"><xsl:copy-of select="@adUrl"/></xsl:if>
			    </option>
			</xsl:when>
			<xsl:when test="@type = 'rss' and string-length(@htmlUrl) &gt; 0">
			    <option value="site:{@htmlUrl}"><xsl:value-of select="$text"/>
			    <xsl:if test="@adUrl"><xsl:copy-of select="@adUrl"/></xsl:if>
			    </option>
			</xsl:when>
			<xsl:when test="string-length(@type) = 0 and child::outline[attribute::type]">			
				<tr><td><xsl:value-of select="$text"/> :</td>
				<td>
				<form method="get" action="http://www.google.com/search">
					<input type="text" name="q" size="31" maxlength="255" value=""></input>
					<select name="q" STYLE="width: 300px;"><xsl:apply-templates select="child::outline[@type]"/></select>
					<input type="submit" value="Search"/>
					<input type="button" value="Buy" onClick="buy(this);"/>
				</form>
				</td>
				</tr>
			</xsl:when>
			<xsl:otherwise>				
				<xsl:apply-templates/>
			</xsl:otherwise>			
		</xsl:choose>
	</xsl:template>

	<xsl:template match="text()">
	</xsl:template>	
	
</xsl:stylesheet>